#!/bin/sh

L(){
    echo -e "\033[33m$@\033[0;0m"
}

init(){
    # uncomment if you want terminal before init,ctrl+D to continue
    #getty -nl /bin/sh 115200 /dev/ttyMT0 linux

    if [ -x /android/init ] ; then
        # Move kernel generated blockdevice link
        mv emmc@* /android/
        touch /dev/null
        chroot /android /init &
        init_wait
    fi

    L "Incorrect init. entering interactive mode."
    exec getty -nl /bin/sh 115200 /dev/ttyMT0 linux
}
init_wait(){
    L "Waiting Android init"
    C=0
    #while [ ! -e /android/dev/.coldboot_done ]; do
    while [ -z "$(grep 'INIT: user build' /android/proc/bootprof)" ]; do
        C=$(($C+1))
        L "wait: $C"
        if [ "$(($C % 10))" = "0" ]; then
            cat /android/proc/bootprof
        fi
        sleep 1
    done
    L "Android init done, mounting sysfs on linux"
    sh
    mkdir linux
    mount -t ext4 -o noatime /android/dev/block/mmcblk0p7 /linux
    mount -o bind /android/proc /linux/proc
    mount -o bind /android/sys /linux/sys
    mount -o bind /android/dev /linux/dev
    mount -o bind /android/dev/pts /linux/dev/pts
    mount -o bind /android/dev/socket /linux/dev/socket

    # access android inside linux root
    [ -d /linux/android ] || mkdir /linux/android
    mount -o bind /android/system /linux/android/
    if [ ! -e /linux/bin/busybox ] && [ ! -e /linux/usr/bin/busybox ]; then
        cp -a /bin/busybox /linux/bin/busybox
    fi

    cp -a /init /linux/init_linux
    exec switch_root linux /init_linux    
}

init_linux(){
    #/etc/rc.local
    echo "Done linux is ready, telnetd at port 1234"
    /bin/bash
}

# call function based on this filename
${0##*/}
